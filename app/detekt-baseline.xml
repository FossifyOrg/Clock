<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>ComplexCondition:ImportHelper.kt$ImportHelper$alarm.timeInMinutes == existingAlarm.timeInMinutes &amp;&amp; alarm.days == existingAlarm.days &amp;&amp; alarm.vibrate == existingAlarm.vibrate &amp;&amp; alarm.soundTitle == existingAlarm.soundTitle &amp;&amp; alarm.soundUri == existingAlarm.soundUri &amp;&amp; alarm.label == existingAlarm.label &amp;&amp; alarm.oneShot == existingAlarm.oneShot</ID>
    <ID>ComplexCondition:ImportHelper.kt$ImportHelper$timer.seconds == existingTimer.seconds &amp;&amp; timer.vibrate == existingTimer.vibrate &amp;&amp; timer.soundUri == existingTimer.soundUri &amp;&amp; timer.soundTitle == existingTimer.soundTitle &amp;&amp; timer.label == existingTimer.label &amp;&amp; timer.createdAt == existingTimer.createdAt</ID>
    <ID>ComplexCondition:IntentHandlerActivity.kt$IntentHandlerActivity$existingTimer != null &amp;&amp; skipUi &amp;&amp; (existingTimer.state is TimerState.Idle || (existingTimer.state is TimerState.Finished &amp;&amp; !existingTimer.oneShot))</ID>
    <ID>CyclomaticComplexMethod:IntentHandlerActivity.kt$IntentHandlerActivity$private fun Intent.dismissAlarm()</ID>
    <ID>CyclomaticComplexMethod:IntentHandlerActivity.kt$IntentHandlerActivity$private fun Intent.setNewAlarm()</ID>
    <ID>EmptyFunctionBlock:AlarmsAdapter.kt$AlarmsAdapter${}</ID>
    <ID>EmptyFunctionBlock:StopwatchAdapter.kt$StopwatchAdapter${}</ID>
    <ID>EmptyFunctionBlock:TimeZonesAdapter.kt$TimeZonesAdapter${}</ID>
    <ID>EmptyFunctionBlock:TimerAdapter.kt$TimerAdapter${}</ID>
    <ID>EmptyFunctionBlock:WidgetAnalogueConfigureActivity.kt$WidgetAnalogueConfigureActivity.&lt;no name provided&gt;${}</ID>
    <ID>EmptyFunctionBlock:WidgetDigitalConfigureActivity.kt$WidgetDigitalConfigureActivity.&lt;no name provided&gt;${}</ID>
    <ID>ForbiddenComment:AlarmController.kt$AlarmController$// TODO: But does this mean the alarm won't be scheduled for next week?</ID>
    <ID>ForbiddenComment:AlarmController.kt$AlarmController$// TODO: Skipped upcoming alarms are being *rescheduled* here.</ID>
    <ID>ForbiddenComment:AlarmController.kt$AlarmController$// TODO: This is a bit of a hack. Skipped alarms should be tracked properly.</ID>
    <ID>ForbiddenComment:AlarmController.kt$AlarmController$// TODO: This works but it is very rudimentary. Snoozed alarms are not being tracked.</ID>
    <ID>ForbiddenComment:AlarmsAdapter.kt$AlarmsAdapter$// TODO: This does not respect config.firstDayOfWeek</ID>
    <ID>MagicNumber:ClockFragment.kt$ClockFragment$24</ID>
    <ID>MagicNumber:ClockFragment.kt$ClockFragment$3600</ID>
    <ID>MagicNumber:ClockFragment.kt$ClockFragment$60</ID>
    <ID>MagicNumber:Config.kt$Config$300</ID>
    <ID>MagicNumber:Constants.kt$5</ID>
    <ID>MagicNumber:Constants.kt$60</ID>
    <ID>MagicNumber:Constants.kt$7</ID>
    <ID>MagicNumber:Constants.kt$8</ID>
    <ID>MagicNumber:Context.kt$0.4f</ID>
    <ID>MagicNumber:Context.kt$12</ID>
    <ID>MagicNumber:Context.kt$2</ID>
    <ID>MagicNumber:Context.kt$24</ID>
    <ID>MagicNumber:Context.kt$3</ID>
    <ID>MagicNumber:Context.kt$3600</ID>
    <ID>MagicNumber:Context.kt$5</ID>
    <ID>MagicNumber:Context.kt$500</ID>
    <ID>MagicNumber:Context.kt$60</ID>
    <ID>MagicNumber:Context.kt$7</ID>
    <ID>MagicNumber:DBHelper.kt$DBHelper$420</ID>
    <ID>MagicNumber:DBHelper.kt$DBHelper$540</ID>
    <ID>MagicNumber:EditAlarmDialog.kt$EditAlarmDialog$3</ID>
    <ID>MagicNumber:EditAlarmDialog.kt$EditAlarmDialog$4</ID>
    <ID>MagicNumber:EditAlarmDialog.kt$EditAlarmDialog$5</ID>
    <ID>MagicNumber:EditAlarmDialog.kt$EditAlarmDialog$6</ID>
    <ID>MagicNumber:EditAlarmDialog.kt$EditAlarmDialog$60</ID>
    <ID>MagicNumber:EditTimerDialog.kt$EditTimerDialog$10</ID>
    <ID>MagicNumber:EditTimerDialog.kt$EditTimerDialog$60</ID>
    <ID>MagicNumber:IntentHandlerActivity.kt$IntentHandlerActivity$11</ID>
    <ID>MagicNumber:IntentHandlerActivity.kt$IntentHandlerActivity$12</ID>
    <ID>MagicNumber:IntentHandlerActivity.kt$IntentHandlerActivity$23</ID>
    <ID>MagicNumber:IntentHandlerActivity.kt$IntentHandlerActivity$59</ID>
    <ID>MagicNumber:IntentHandlerActivity.kt$IntentHandlerActivity$60</ID>
    <ID>MagicNumber:Long.kt$100</ID>
    <ID>MagicNumber:MainActivity.kt$MainActivity$3</ID>
    <ID>MagicNumber:MyTimePickerDialogDialog.kt$MyTimePickerDialogDialog$3600</ID>
    <ID>MagicNumber:MyTimePickerDialogDialog.kt$MyTimePickerDialogDialog$60</ID>
    <ID>MagicNumber:StopwatchService.kt$StopwatchService.&lt;no name provided&gt;$500L</ID>
    <ID>MagicNumber:TimerAdapter.kt$TimerAdapter$0.7f</ID>
    <ID>MagicNumber:WidgetAnalogueConfigureActivity.kt$WidgetAnalogueConfigureActivity$100</ID>
    <ID>MagicNumber:WidgetDigitalConfigureActivity.kt$WidgetDigitalConfigureActivity$100</ID>
    <ID>MaxLineLength:DBHelper.kt$DBHelper$"$COL_IS_ENABLED INTEGER, $COL_VIBRATE INTEGER, $COL_SOUND_TITLE TEXT, $COL_SOUND_URI TEXT, $COL_LABEL TEXT, $COL_ONE_SHOT INTEGER)"</ID>
    <ID>MaxLineLength:DBHelper.kt$DBHelper$"CREATE TABLE IF NOT EXISTS $ALARMS_TABLE_NAME ($COL_ID INTEGER PRIMARY KEY AUTOINCREMENT, $COL_TIME_IN_MINUTES INTEGER, $COL_DAYS INTEGER, "</ID>
    <ID>MaxLineLength:EditTimeZoneDialog.kt$EditTimeZoneDialog$.</ID>
    <ID>MaxLineLength:IntentHandlerActivity.kt$IntentHandlerActivity$&amp;&amp;</ID>
    <ID>MaxLineLength:IntentHandlerActivity.kt$IntentHandlerActivity$it.timeInMinutes == timeInMinutes &amp;&amp; (it.days.isBitSet(dayBitToLookFor) || it.days == dayToLookFor)</ID>
    <ID>MaxLineLength:Long.kt$val seconds = TimeUnit.MILLISECONDS.toSeconds(this) - TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(this))</ID>
    <ID>MaxLineLength:MyAnalogueTimeWidgetProvider.kt$MyAnalogueTimeWidgetProvider$override</ID>
    <ID>MaxLineLength:MyAnalogueTimeWidgetProvider.kt$MyAnalogueTimeWidgetProvider$val pendingIntent = PendingIntent.getActivity(context, OPEN_APP_INTENT_ID, this, PendingIntent.FLAG_UPDATE_CURRENT or PendingIntent.FLAG_IMMUTABLE)</ID>
    <ID>MaxLineLength:MyTimePickerDialogDialog.kt$MyTimePickerDialogDialog$class</ID>
    <ID>MaxLineLength:SelectAlarmDialog.kt$SelectAlarmDialog$binding.dialogSelectAlarmRadio.addView(radioButton, RadioGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT))</ID>
    <ID>MaxLineLength:SelectAlarmDialog.kt$SelectAlarmDialog$setColors(activity.getProperTextColor(), activity.getProperPrimaryColor(), activity.getProperBackgroundColor())</ID>
    <ID>MaxLineLength:SelectTimeZonesAdapter.kt$SelectTimeZonesAdapter$class</ID>
    <ID>MaxLineLength:SettingsActivity.kt$SettingsActivity$binding.settingsUseEnglishHolder.beVisibleIf((config.wasUseEnglishToggled || Locale.getDefault().language != "en") &amp;&amp; !isTiramisuPlus())</ID>
    <ID>MaxLineLength:TimeZonesAdapter.kt$TimeZonesAdapter$class</ID>
    <ID>NestedBlockDepth:DBHelper.kt$DBHelper$fun getAlarms(): ArrayList&lt;Alarm&gt;</ID>
    <ID>NestedBlockDepth:IntentHandlerActivity.kt$IntentHandlerActivity$private fun Intent.dismissAlarm()</ID>
    <ID>NestedBlockDepth:IntentHandlerActivity.kt$IntentHandlerActivity$private fun Intent.setNewAlarm()</ID>
    <ID>NewLineAtEndOfFile:MyTextClock.kt$org.fossify.clock.views.MyTextClock.kt</ID>
    <ID>PrintStackTrace:AlarmService.kt$AlarmService$e</ID>
    <ID>ReturnCount:Context.kt$fun Context.firstDayOrder(bitMask: Int): Int</ID>
    <ID>SwallowedException:Converters.kt$Converters$e: Exception</ID>
    <ID>SwallowedException:DBHelper.kt$DBHelper$e: Exception</ID>
    <ID>SwallowedException:ExportHelper.kt$ExportHelper$e: Exception</ID>
    <ID>SwallowedException:IntentHandlerActivity.kt$IntentHandlerActivity$e: Exception</ID>
    <ID>TooGenericExceptionCaught:AlarmController.kt$AlarmController$e: Exception</ID>
    <ID>TooGenericExceptionCaught:AlarmService.kt$AlarmService$e: Exception</ID>
    <ID>TooGenericExceptionCaught:App.kt$App$e: Exception</ID>
    <ID>TooGenericExceptionCaught:Context.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:Converters.kt$Converters$e: Exception</ID>
    <ID>TooGenericExceptionCaught:DBHelper.kt$DBHelper$e: Exception</ID>
    <ID>TooGenericExceptionCaught:ExportHelper.kt$ExportHelper$e: Exception</ID>
    <ID>TooGenericExceptionCaught:ImportHelper.kt$ImportHelper$e: Exception</ID>
    <ID>TooGenericExceptionCaught:IntentHandlerActivity.kt$IntentHandlerActivity$e: Exception</ID>
    <ID>TooGenericExceptionCaught:StopwatchService.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:TimerService.kt$TimerService$e: Exception</ID>
    <ID>TooGenericExceptionCaught:TimerService.kt$e: Exception</ID>
    <ID>TooGenericExceptionThrown:ViewPagerAdapter.kt$ViewPagerAdapter$throw RuntimeException("Trying to fetch unknown fragment id $position")</ID>
    <ID>TooManyFunctions:AlarmController.kt$AlarmController</ID>
    <ID>TooManyFunctions:AlarmFragment.kt$AlarmFragment : FragmentToggleAlarmInterface</ID>
    <ID>TooManyFunctions:AlarmService.kt$AlarmService : Service</ID>
    <ID>TooManyFunctions:AlarmsAdapter.kt$AlarmsAdapter : MyRecyclerViewAdapterItemTouchHelperContract</ID>
    <ID>TooManyFunctions:Constants.kt$org.fossify.clock.helpers.Constants.kt</ID>
    <ID>TooManyFunctions:Context.kt$org.fossify.clock.extensions.Context.kt</ID>
    <ID>TooManyFunctions:DBHelper.kt$DBHelper : SQLiteOpenHelper</ID>
    <ID>TooManyFunctions:IntentHandlerActivity.kt$IntentHandlerActivity : SimpleActivity</ID>
    <ID>TooManyFunctions:MainActivity.kt$MainActivity : SimpleActivity</ID>
    <ID>TooManyFunctions:SettingsActivity.kt$SettingsActivity : SimpleActivity</ID>
    <ID>TooManyFunctions:StopwatchAdapter.kt$StopwatchAdapter : MyRecyclerViewListAdapter</ID>
    <ID>TooManyFunctions:StopwatchFragment.kt$StopwatchFragment : Fragment</ID>
    <ID>TooManyFunctions:TimeZonesAdapter.kt$TimeZonesAdapter : MyRecyclerViewAdapter</ID>
    <ID>TooManyFunctions:TimerAdapter.kt$TimerAdapter : MyRecyclerViewListAdapterItemTouchHelperContract</ID>
    <ID>TooManyFunctions:TimerFragment.kt$TimerFragment : Fragment</ID>
    <ID>TooManyFunctions:ViewPagerAdapter.kt$ViewPagerAdapter : FragmentStatePagerAdapter</ID>
    <ID>UnusedParameter:StopwatchService.kt$StopwatchService$event: StopwatchStopService</ID>
    <ID>UnusedParameter:TimerService.kt$TimerService$event: TimerEvent.Refresh</ID>
    <ID>UnusedParameter:TimerService.kt$TimerService$event: TimerStopService</ID>
    <ID>UnusedPrivateMember:App.kt$App$@OnLifecycleEvent(Lifecycle.Event.ON_START) private fun onAppForegrounded()</ID>
    <ID>UnusedPrivateMember:App.kt$App$@OnLifecycleEvent(Lifecycle.Event.ON_STOP) private fun onAppBackgrounded()</ID>
    <ID>VariableNaming:ClockFragment.kt$ClockFragment$private val ONE_SECOND = 1000L</ID>
    <ID>VariableNaming:DBHelper.kt$DBHelper$private val ALARMS_TABLE_NAME = "contacts" // wrong table name, ignore it</ID>
    <ID>VariableNaming:DBHelper.kt$DBHelper$private val COL_DAYS = "days"</ID>
    <ID>VariableNaming:DBHelper.kt$DBHelper$private val COL_ID = "id"</ID>
    <ID>VariableNaming:DBHelper.kt$DBHelper$private val COL_IS_ENABLED = "is_enabled"</ID>
    <ID>VariableNaming:DBHelper.kt$DBHelper$private val COL_LABEL = "label"</ID>
    <ID>VariableNaming:DBHelper.kt$DBHelper$private val COL_ONE_SHOT = "one_shot"</ID>
    <ID>VariableNaming:DBHelper.kt$DBHelper$private val COL_SOUND_TITLE = "sound_title"</ID>
    <ID>VariableNaming:DBHelper.kt$DBHelper$private val COL_SOUND_URI = "sound_uri"</ID>
    <ID>VariableNaming:DBHelper.kt$DBHelper$private val COL_TIME_IN_MINUTES = "time_in_minutes"</ID>
    <ID>VariableNaming:DBHelper.kt$DBHelper$private val COL_VIBRATE = "vibrate"</ID>
    <ID>VariableNaming:Long.kt$val MSFormat = if (useLongerMSFormat) "%03d" else "%01d"</ID>
    <ID>WildcardImport:EditTimerDialog.kt$import org.fossify.clock.extensions.*</ID>
    <ID>WildcardImport:EditTimerDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:SelectAlarmDialog.kt$import org.fossify.commons.extensions.*</ID>
    <ID>WildcardImport:SplashActivity.kt$import org.fossify.clock.helpers.*</ID>
    <ID>WildcardImport:TimerDao.kt$import androidx.room.*</ID>
    <ID>WildcardImport:ViewPagerAdapter.kt$import org.fossify.clock.helpers.*</ID>
  </CurrentIssues>
</SmellBaseline>
